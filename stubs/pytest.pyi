from collections.abc import Callable
from typing import Any, ParamSpec, TypeVar

P = ParamSpec("P")
T = TypeVar("T")

def fixture(
    *_args: Any, **_kwargs: Any
) -> Callable[[Callable[P, T]], Callable[P, T]]: ...
def mark(*_args: Any, **_kwargs: Any) -> Any: ...
def raises(*_args: Any, **_kwargs: Any) -> Any: ...
def skip(*_args: Any, **_kwargs: Any) -> Any: ...
def fail(*_args: Any, **_kwargs: Any) -> Any: ...
def main(*_args: Any, **_kwargs: Any) -> Any: ...
